/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package kevin.addison.hsbc.hsbcsocialmedia.rest.api;

import io.swagger.annotations.*;
import kevin.addison.hsbc.hsbcsocialmedia.rest.model.MessageResponse;
import kevin.addison.hsbc.hsbcsocialmedia.rest.model.WallPostRequest;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;

@Api(value = "message", description = "the messages API")
public interface MessagesApi {

    @ApiOperation(value = "Get a user by ID", nickname = "messagesUsernameGet", notes = "This allows to user to fetch all messages posted", response = MessageResponse.class, tags = {"wall",})
    @ApiResponses(value = {
            @ApiResponse(
                    code = 200,
                    message = "OK",
                    response = MessageResponse.class
            )
    })
    @RequestMapping(
            value = "/messages/{username}",
            method = RequestMethod.GET
    )
    ResponseEntity<MessageResponse> messagesUsernameGet(
            @ApiParam(
                    value = "The user name for the messages you want to fetch",
                    required = true)
            @PathVariable("username") String username);

    @ApiOperation(
            value = "Post a message to your wall",
            nickname = "postMessage",
            notes = "This allows to user to post a message on his profile",
            tags = {"wall",}
    )
    @ApiResponses(
            value = {
                    @ApiResponse(
                            code = 201,
                            message = "Posted message saved"
                    ),
                    @ApiResponse(
                            code = 422,
                            message = "Validation Message"
                    )
            }
    )
    @RequestMapping(
            value = "/message",
            produces = {"application/json"},
            method = RequestMethod.POST
    )
    ResponseEntity<Void> postMessage(
            @ApiParam(
                    value = "Message request to the API for posting a message against a user",
                    required = true
            ) @Valid @RequestBody WallPostRequest body);

}
